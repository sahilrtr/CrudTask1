// <auto-generated />
using System;
using CrudTask1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CrudTask1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CrudTask1.Models.Address", b =>
                {
                    b.Property<int>("Aid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CityCtId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryCnid")
                        .HasColumnType("int");

                    b.Property<string>("FirstAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("SecondAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateSid")
                        .HasColumnType("int");

                    b.HasKey("Aid");

                    b.HasIndex("CityCtId");

                    b.HasIndex("CountryCnid");

                    b.HasIndex("StateSid");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CrudTask1.Models.City", b =>
                {
                    b.Property<int>("CtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateSid")
                        .HasColumnType("int");

                    b.HasKey("CtId");

                    b.HasIndex("StateSid");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CrudTask1.Models.Country", b =>
                {
                    b.Property<int>("Cnid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cnid");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CrudTask1.Models.Department", b =>
                {
                    b.Property<int>("Did")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Did");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CrudTask1.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AddressAid")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentDid")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("AddressAid");

                    b.HasIndex("DepartmentDid");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CrudTask1.Models.State", b =>
                {
                    b.Property<int>("Sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CountryCnid")
                        .HasColumnType("int");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sid");

                    b.HasIndex("CountryCnid");

                    b.ToTable("States");
                });

            modelBuilder.Entity("CrudTask1.Models.Address", b =>
                {
                    b.HasOne("CrudTask1.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityCtId");

                    b.HasOne("CrudTask1.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCnid");

                    b.HasOne("CrudTask1.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateSid");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("State");
                });

            modelBuilder.Entity("CrudTask1.Models.City", b =>
                {
                    b.HasOne("CrudTask1.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateSid");

                    b.Navigation("State");
                });

            modelBuilder.Entity("CrudTask1.Models.Employee", b =>
                {
                    b.HasOne("CrudTask1.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressAid");

                    b.HasOne("CrudTask1.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentDid");

                    b.Navigation("Address");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CrudTask1.Models.State", b =>
                {
                    b.HasOne("CrudTask1.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCnid");

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
